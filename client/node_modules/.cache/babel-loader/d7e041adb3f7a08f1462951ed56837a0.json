{"ast":null,"code":"const express = require(\"express\");\nconst PORT = process.env.PORT || 3000;\nconst app = express();\napp.listen(PORT, () => {\n  console.log(`Server listening on ${PORT}`);\n});\n\n// Handle GET requests to /api route\napp.get(\"/images\", (req, res) => {\n  res.json({\n    message: \"Hello from server!\"\n  });\n});\n\n// All other GET requests not handled before will return our React app\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(__dirname, '../client/build', 'index.html'));\n});","map":{"version":3,"names":["express","require","PORT","process","env","app","listen","console","log","get","req","res","json","message","sendFile","path","resolve","__dirname"],"sources":["C:/Users/jans/Documents/GitHub/full_stack_challenge_jan_sekne/src/feedAPI.js"],"sourcesContent":["const express = require(\"express\");\r\nconst PORT = process.env.PORT || 3000;\r\nconst app = express();\r\napp.listen(PORT, () => {\r\n  console.log(`Server listening on ${PORT}`);\r\n});\r\n\r\n// Handle GET requests to /api route\r\napp.get(\"/images\", (req, res) => {\r\n  res.json({ message: \"Hello from server!\" });\r\n});\r\n\r\n// All other GET requests not handled before will return our React app\r\napp.get('*', (req, res) => {\r\n  res.sendFile(path.resolve(__dirname, '../client/build', 'index.html'));\r\n});"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AACrC,MAAMG,GAAG,GAAGL,OAAO,EAAE;AACrBK,GAAG,CAACC,MAAM,CAACJ,IAAI,EAAE,MAAM;EACrBK,OAAO,CAACC,GAAG,CAAE,uBAAsBN,IAAK,EAAC,CAAC;AAC5C,CAAC,CAAC;;AAEF;AACAG,GAAG,CAACI,GAAG,CAAC,SAAS,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC/BA,GAAG,CAACC,IAAI,CAAC;IAAEC,OAAO,EAAE;EAAqB,CAAC,CAAC;AAC7C,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACI,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACzBA,GAAG,CAACG,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACC,SAAS,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAC;AACxE,CAAC,CAAC"},"metadata":{},"sourceType":"module"}