{"ast":null,"code":"// server/index.js\nconst path = require('path');\nconst express = require('express');\n\n// Have Node serve the files for our built React app\napp.use(express.static(path.resolve(__dirname, '../client/build')));\n\n// Handle GET requests to /api route\napp.get(\"/images\", (req, res) => {\n  res.json({\n    message: \"Hello from server!\"\n  });\n});\n\n// All other GET requests not handled before will return our React app\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(__dirname, '../client/build', 'index.html'));\n});","map":{"version":3,"names":["path","require","express","app","use","static","resolve","__dirname","get","req","res","json","message","sendFile"],"sources":["C:/Users/jans/Documents/GitHub/full_stack_challenge_jan_sekne/src/feedAPI.js"],"sourcesContent":["// server/index.js\r\nconst path = require('path');\r\nconst express = require('express');\r\n\r\n\r\n\r\n// Have Node serve the files for our built React app\r\napp.use(express.static(path.resolve(__dirname, '../client/build')));\r\n\r\n// Handle GET requests to /api route\r\napp.get(\"/images\", (req, res) => {\r\n  res.json({ message: \"Hello from server!\" });\r\n});\r\n\r\n// All other GET requests not handled before will return our React app\r\napp.get('*', (req, res) => {\r\n  res.sendFile(path.resolve(__dirname, '../client/build', 'index.html'));\r\n});"],"mappings":"AAAA;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;;AAIlC;AACAE,GAAG,CAACC,GAAG,CAACF,OAAO,CAACG,MAAM,CAACL,IAAI,CAACM,OAAO,CAACC,SAAS,EAAE,iBAAiB,CAAC,CAAC,CAAC;;AAEnE;AACAJ,GAAG,CAACK,GAAG,CAAC,SAAS,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC/BA,GAAG,CAACC,IAAI,CAAC;IAAEC,OAAO,EAAE;EAAqB,CAAC,CAAC;AAC7C,CAAC,CAAC;;AAEF;AACAT,GAAG,CAACK,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACzBA,GAAG,CAACG,QAAQ,CAACb,IAAI,CAACM,OAAO,CAACC,SAAS,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAC;AACxE,CAAC,CAAC"},"metadata":{},"sourceType":"module"}