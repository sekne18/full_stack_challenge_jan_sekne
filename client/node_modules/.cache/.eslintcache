[{"C:\\Users\\jans\\Documents\\GitHub\\full_stack_challenge_jan_sekne\\client\\src\\index.js":"1","C:\\Users\\jans\\Documents\\GitHub\\full_stack_challenge_jan_sekne\\client\\src\\App.js":"2","C:\\Users\\jans\\Documents\\GitHub\\full_stack_challenge_jan_sekne\\client\\src\\components\\content\\Content.js":"3","C:\\Users\\jans\\Documents\\GitHub\\full_stack_challenge_jan_sekne\\client\\src\\components\\image\\ImageCard.js":"4"},{"size":253,"mtime":1666861957035,"results":"5","hashOfConfig":"6"},{"size":218,"mtime":1666890231906,"results":"7","hashOfConfig":"6"},{"size":1848,"mtime":1666891297919,"results":"8","hashOfConfig":"6"},{"size":442,"mtime":1666890362491,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"iid72y",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jans\\Documents\\GitHub\\full_stack_challenge_jan_sekne\\client\\src\\index.js",[],["20","21"],"C:\\Users\\jans\\Documents\\GitHub\\full_stack_challenge_jan_sekne\\client\\src\\App.js",[],"C:\\Users\\jans\\Documents\\GitHub\\full_stack_challenge_jan_sekne\\client\\src\\components\\content\\Content.js",["22"],"import React, { useEffect, useState } from 'react';\r\nimport { FcSearch } from 'react-icons/fc';\r\nimport ImageCard from '../image/ImageCard';\r\nimport './content.css';\r\n\r\nfunction Content() {\r\n  const [images, setImages] = useState([]); // Stored images\r\n  const [text, setText] = useState(''); // Stored search text\r\n  const [btnPressed, setBtnPressed] = useState(false); // stored boolean value to trigger\r\n\r\n  useEffect(() => {\r\n    /* \r\n      It gets called upon building component. \r\n      Will trigger each time there is a change in \"btnPressed\" variable (dependencies).\r\n      Could also add text to dependencies but we would call server for images on each change in input.\r\n    */\r\n    setImages([]); // clears array\r\n    fetch(`/api/${text}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setImages(JSON.parse(data).items));\r\n    setBtnPressed(false);\r\n  }, [btnPressed]);\r\n\r\n  return (\r\n    <section className='main'>\r\n      <div className=\"search-container\">\r\n        <p>Coding Challenge</p>\r\n        <div className='search'>\r\n          <input type=\"text\" onChange={(e) => setText(e.target.value)}/>\r\n          <button className='searchButton' type='button' onClick={() => setBtnPressed(true)}><FcSearch size={35}/></button>\r\n        </div>\r\n      </div>\r\n      <div className='content-container'>\r\n      { \r\n      /* Checks if there are no images. If its true it renders <p> tag, otherwise <ImageCard/> */\r\n      images.length === 0 ? <p>No hits</p> :\r\n\r\n      /* map function goes through each item and allows us to create <ImageCard/> components. Item contains all the information about the selected image */\r\n      images.map((item) => (\r\n        <ImageCard key={item.media.m} url={item.media.m} title={item.title} source={item.link}/>\r\n      ))\r\n      }\r\n      </div>\r\n    </section>\r\n    \r\n  )\r\n}\r\n\r\nexport default Content","C:\\Users\\jans\\Documents\\GitHub\\full_stack_challenge_jan_sekne\\client\\src\\components\\image\\ImageCard.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":22,"column":6,"nodeType":"29","endLine":22,"endColumn":18,"suggestions":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'text'. Either include it or remove the dependency array.","ArrayExpression",["33"],"no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [btnPressed, text]",{"range":"36","text":"37"},[876,888],"[btnPressed, text]"]